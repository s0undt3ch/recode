name: CI Workflow

on:
  - push
  - pull_request

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Package dependencies
        run: |
          pip install pre-commit

      - name: Get Python version checksum
        id: python-version-checksum
        shell: bash
        run: |
          VERSION_SHA256SUM=$(python --version --version | sha256sum | cut -d ' ' -f 1)
          echo "VERSION_SHA256SUM=$VERSION_SHA256SUM"
          echo "version-sha256sum=$VERSION_SHA256SUM" >> "$GITHUB_OUTPUT"

      - name: Get Pre-Commit version checksum
        id: pre-commit-version-checksum
        shell: bash
        run: |
          VERSION_SHA256SUM=$(pre-commit --version | sha256sum | cut -d ' ' -f 1)
          echo "VERSION_SHA256SUM=$VERSION_SHA256SUM"
          echo "version-sha256sum=$VERSION_SHA256SUM" >> "$GITHUB_OUTPUT"

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: >-
            venv|
            ${{ runner.os }}|
            pre-commit|
            ${{ steps.python-version-checksum.outputs.version-sha256sum }}|
            ${{ steps.pre-commit-version-checksum.outputs.version-sha256sum }}|
            ${{ hashFiles('**/poetry.lock') }}

      - name: Install Pre-commit Hooks
        env:
          PRE_COMMIT_COLOR: always
        run: |
          pre-commit install --install-hooks

      - name: Run Pre-commit
        env:
          PRE_COMMIT_COLOR: always
        run: |
          pre-commit run --show-diff-on-failure --color=always --all-files

  tests:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install System Dependencies
        if: ${{ contains(runner.os, 'mac') }}
        run: |
           brew install coreutils

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true

      - name: Get Python version checksum
        id: python-version-checksum
        shell: bash
        run: |
          VERSION_SHA256SUM=$(python --version --version | sha256sum | cut -d ' ' -f 1)
          echo "VERSION_SHA256SUM=$VERSION_SHA256SUM"
          echo "version-sha256sum=$VERSION_SHA256SUM" >> "$GITHUB_OUTPUT"

      - name: Get Poetry version checksum
        id: poetry-version-checksum
        shell: bash
        run: |
          VERSION_SHA256SUM=$(poetry --version | sha256sum | cut -d ' ' -f 1)
          echo "VERSION_SHA256SUM=$VERSION_SHA256SUM"
          echo "version-sha256sum=$VERSION_SHA256SUM" >> "$GITHUB_OUTPUT"

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: >-
            venv|
            ${{ runner.os }}|
            pre-commit|
            ${{ steps.python-version-checksum.outputs.version-sha256sum }}|
            ${{ steps.poetry-version-checksum.outputs.version-sha256sum }}|
            ${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        run: |
          poetry install -v

      - name: Run Tests
        run: |
          poetry run coverage run -m pytest --color=yes

      - name: Report Coverage
        run: |
          poetry run coverage combine
          poetry run coverage report
